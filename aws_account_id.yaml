name: Example Multiple AWS Account Workflow

on:
  push:
    branches:
      - main    # Push or merge to main branch
      - '**'    # Push to any branch (for development/testing)
  pull_request:
    branches:
      - main    # Pull request targeting main
  release:
    types: [published] # Trigger deployment when a new release is published

jobs:
  setup_environment:
    runs-on: ubuntu-latest

    steps:
      - name: Set environment based on event and user
        id: set-env
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.base_ref }}" == "main" ]]; then
            echo "environment=staging" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          else
            echo "environment=${{ github.actor }}" >> $GITHUB_OUTPUT
          fi
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}

  get_aws_account_id:
    runs-on: ubuntu-latest
    needs: setup_environment

    permissions:
      id-token: write  # Allows GitHub to generate OIDC token
      contents: read

    environment:
      name: ${{ needs.setup_environment.outputs.environment }}

    steps:
      - name: echo environment
        run: |
          echo "environment is set to ${{ needs.setup_environment.outputs.environment }}"
          echo "role:  ${{ secrets.OPENID_GITHUB_ROLE }}"
          echo "region: aws-region: ${{ vars.AWS_REGION }}"

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OPENID_GITHUB_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Get AWS Account ID
        id: aws-account-id
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "AWS_ACCOUNT_ID=$ACCOUNT_ID"
