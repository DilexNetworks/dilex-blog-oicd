name: CI Pipeline

on:
###  push:
###    branches:
###      - main    # Push or merge to main branch
###      - '**'    # Push to any branch (for development/testing)
###  pull_request:
###    branches:
###      - main    # Pull request targeting main
###  release:
###    types: [published] # Trigger deployment when a new release is published
  workflow_dispatch: # Allows manual triggering

jobs:
  setup_environment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set environment based on event and user
        run: |
          if [[ "${{ github.event_name }}" == "pull_request" && "${{ github.base_ref }}" == "main" ]]; then
            echo "ENVIRONMENT=staging" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENVIRONMENT=production" >> $GITHUB_ENV
          else
            echo "ENVIRONMENT=${{ github.actor }}" >> $GITHUB_ENV
          fi
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}

  get_aws_account_id:
    runs-on: ubuntu-latest
    needs: setup_environment
    
    environment:
      name ${{ needs.setup_environment.outputs.environment }}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.OPENID_GITHUB_ROLE }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Get AWS Account ID
        id: aws-account-id
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
          echo "AWS_ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV

      - name: Echo AWS Account ID
        run: |
          echo "Connected to AWS account: ${{ env.AWS_ACCOUNT_ID }}"
